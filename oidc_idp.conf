# -----------------------------------------------------------------------------#
#                                                                              #
#                     IDP Configuration for OpenID Connect                     #
#                            (within http block)   |                           #
#                                                  |                           #
#              http {                              |                           #
#                    :                             |                           #
#                  +--------------------------+    |                           #
#                  | include "oidc_idp.conf"; | <--+                           #
#                  +--------------------------+                                #
#                    :                                                         #
#                  server {                                                    #
#                      :                                                       #
#                  }                                                           #
#                    :                                                         #
#              }                                                               #
#                                                                              #
# - This file is to configure IDP related info to handle OIDC workflow.        #
# - Each map block allows multi values so that multiple IdPs can be supported. #
# - The $host variable is used as default input parameter but can be changed.  #
#                                                                              #
# ---------------------------------------------------------------------------- #

map $host $oidc_authz_endpoint {
    default                "https://dev-9590480.okta.com/oauth2/v1/authorize";
    # my-nginx.example.com "https://my-idp/oauth2/v1/authorize";
}

map $host $oidc_token_endpoint {
    default                "https://dev-9590480.okta.com/oauth2/v1/token";
    # my-nginx.example.com "https://{my-app}.okta.com/oauth2/{version}/token";
}

map $host $oidc_jwt_keyfile {
    default                "https://dev-9590480.okta.com/oauth2/v1/keys";
}

map $host $oidc_userinfo_endpoint {
    default                "https://dev-9590480.okta.com/oauth2/v1/userinfo";
}

map $host $oidc_logout_endpoint {
    default                "https://dev-9590480.okta.com/oauth2/v1/logout";
    # my-nginx.example.com "https://{my-app}.okta.com/oauth2/{version}/logout";
}

map $host $oidc_pkce_enable {
    default 1;
}

map $host $oidc_client {
    default "my-client-id";
}

map $host $oidc_client_secret {
    default "my-client-secret";
}

map $host $oidc_scopes {
    default "openid+profile+email+offline_access";
}

map $host $oidc_logout_redirect {
    # Where to send browser after requesting /logout location.
    default "/_logout";
}

map $host $oidc_rp_initiated_logout_enable {
    # This is to enable the OIDC RP-initiated logout, as per:
    #  https://openid.net/specs/openid-connect-rpinitiated-1_0.html#RPLogout
    #
    # +------------+-----------------------------------------------------------+
    # | options    | description                                               |
    # +------------+-----------------------------------------------------------+
    # | 1          | OIDC RP-initiated logout                                  |
    # +------------+-----------------------------------------------------------+
    # | 0          | $oidc_logout_query_params is used custom logout if an IDP |
    # |            | doesn't support OIDC RP-initiated logout                  |
    # +------------+-----------------------------------------------------------+
    default 1;
}

map $host $oidc_logout_query_params {
    # Use for when an IDP supports OIDC RP-initiated logout.
    default "";

    # Define manually or be generated by 'logOutParams' via NGINX APIM.
    #
    # Example 1: AWS Cognito Logout & prompt an user to sign in as another user.
    # my-nginx.example.com '{
    #     "response_type": "code",
    #     "client_id"    : "$oidc_client",
    #     "redirect_uri" : "$redirect_base$redir_location",
    #     "state"        : "STATE",
    #     "scope"        : "$oidc_scopes"
    # }';
    #
    # Example 2: AWS Cognito Logout & redirect back to client.
    # my-nginx.example.com '{
    #     "client_id"    : "$oidc_client",
    #     "logout_uri"   : "$redirect_base/_logout"
    # }';
}

map $host $oidc_logout_path_params_enable {
    default 0;
}

map $host $oidc_logout_path_params {
    default "";
    # my-nginx.example.com '{ "my-app": "dev-9590480", "version": "v1" }';
}

map $host $oidc_authz_query_params_enable {
    default 0;
}

map $host $oidc_authz_query_params {
    default "";
    # my-nginx.example.com '{
    #     "response_type": "code",
    #     "scope"        : "$oidc_scopes",
    #     "client_id"    : "$oidc_client",
    #     "redirect_uri" : "$redirect_base$redir_location",
    #     "nonce"        : "$nonce_hash",
    #     "state"        : 0
    # }';
}

map $host $oidc_authz_path_params_enable {
    default 0;
}

map $host $oidc_authz_path_params {
    default "";
    # my-nginx.example.com '{ "my-app": "dev-9590480", "version": "v1" }';
}

map $host $oidc_token_query_params_enable {
    default 0;
}

map $host $oidc_token_query_params {
    default "";
    # my-nginx.example.com '{ "example": "data" }';
}

map $host $oidc_token_path_params_enable {
    default 0;
}

map $host $oidc_token_path_params {
    default "";
    # my-nginx.example.com '{ "my-app": "dev-9590480", "version": "v1" }';
}

map $host $oidc_hmac_key {
    # This should be unique for every NGINX instance/cluster
    default "ChangeMe";
}

# vim: syntax=nginx